version: '3.7'

networks:
  dickens-network:
    driver: bridge

services:
  temporal:
    image: temporalio/auto-setup:latest
    container_name: temporal
    ports:
      - 7233:7233
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=dickens-postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    healthcheck:
      test: [ "CMD-SHELL", "tctl --ad temporal:7233 cluster health | grep SERVING" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/temporal/config:/etc/temporal/config/dynamicconfig
    depends_on:
      - dickens-postgres
    networks:
      - dickens-network

  dickens-postgres:
    image: postgres:13
    container_name: dickens-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    volumes:
      - /var/lib/postgresql/data
    networks:
      - dickens-network

  quarkus-backend:
    build:
      context: ./dickens-backend
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: dickens-backend
    ports:
      - "8080:8080"
    depends_on:
      temporal:
        condition: service_healthy
    environment:
      - QUARKUS_TEMPORAL_CONNECTION_TARGET=temporal:7233
    networks:
      - dickens-network

  temporal-web:
    image: temporalio/web:latest
    container_name: dickens-temporal-web
    ports:
      - "8088:8088" # Temporal Web UI
    depends_on:
      temporal:
        condition: service_healthy
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
    networks:
      - dickens-network

  bluesky:
    build:
      context: ./bluesky
    depends_on:
      temporal:
        condition: service_healthy
    environment:
      TEMPORAL_SERVICE_ADDRESS: temporal:7233
    networks:
      - dickens-network
volumes:
  dickens-postgres-data:
